<!-- livebook:{"autosave_interval_s":30} -->

# Advent of Code 2023 - Day 1 -Template

```elixir
Mix.install([
  {:kino_aoc, "~> 0.1"}
])
```

## Introduction

### --- Day 1 ---

Description

### --- Part Two ---

Description

## Puzzle

<!-- livebook:{"attrs":{"assign_to":"puzzle_input","day":"1","session_secret":"AOC_SESSION","year":"2023"},"chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2023", "1", System.fetch_env!("LB_AOC_SESSION"))
```

```elixir
IO.puts(puzzle_input)
```

## Parser

### Code - Parser

```elixir
defmodule Parser do
  def parse(input) do
  end
end
```

### Tests - Parser

```elixir
ExUnit.start(autorun: false)

defmodule ParserTest do
  use ExUnit.Case, async: true
  import Parser

  @input ""
  @expected nil

  test "parse test" do
    assert parse(@input) == @expected
  end
end

ExUnit.run()
```

<!-- livebook:{"branch_parent_index":2} -->

## Part One

### Code - Part 1

```elixir
defmodule PartOne do
  def solve(input) do
    IO.puts("--- Part One ---")
    IO.puts("Result: #{run(input)}")
  end

  def run(input) do
  end
end
```

### Tests - Part 1

```elixir
ExUnit.start(autorun: false)

defmodule PartOneTest do
  use ExUnit.Case, async: true
  import PartOne

  @input ""
  @expected nil

  test "part one" do
    assert run(@input) == @expected
  end
end

ExUnit.run()
```

### Solution - Part 1

```elixir
PartOne.solve(puzzle_input)
```

<!-- livebook:{"branch_parent_index":2} -->

## Part Two

### Code - Part 2

```elixir
defmodule PartTwo do
  def solve(input) do
    IO.puts("--- Part Two ---")
    IO.puts("Result: #{run(input)}")
  end

  def run(input) do
  end
end
```

### Tests - Part 2

```elixir
ExUnit.start(autorun: false)

defmodule PartTwoTest do
  use ExUnit.Case, async: true
  import PartTwo

  @input ""
  @expected nil

  test "part two" do
    assert run(@input) == @expected
  end
end

ExUnit.run()
```

### Solution - Part 2

```elixir
PartTwo.solve(puzzle_input)
```

<!-- livebook:{"offset":2040,"stamp":{"token":"XCP.6PjhDx8kpyiBhGzH9s_M7Trv35gcXpS8A8JtQMszlU_I07Ri5-qO2UmOJbkKfGf32s0uYFX391wOmauKpQt9QUjoWoX0MLr9FJdXC5eMtcC5thQ25giB","version":2}} -->
